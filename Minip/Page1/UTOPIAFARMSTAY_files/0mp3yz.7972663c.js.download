(this.$WP=this.$WP||[]).push(["0mp3yz",(i,e)=>{var r,t,n,s,o,a,u,h,c,p,f,d={t:!1,pushManager:null,aa:()=>(d.o(),d.pushManager||(d.pushManager=new f(c.gr(),c.ea(),c.ce(),c.Ks(),c.nn(p.na),c.nn(p.ra),c.ir(),c.nn(p.ta),c.nn(p.ia),c.l())),d.pushManager),o:()=>{d.t||(c.u(d),d.t=!0)},destroy:()=>{d.pushManager=null,d.t=!1}};return[()=>{(f=class{constructor(i,e,t,n,s,o,a,u,h,c){this.Sr=i,this._r=e,this.Ur=t,this.Wr=n+"/safari/"+e,this.Nr=s||"/service-worker.js",this.Ir=o,this.gt=a,this.Vr=u||!1,this.Or=h||!1,this.h=c,this.Mr=r.Yr(),this.Gr=r.Hr()}Jr(){return this.Or}Kr(i,e,r,n,s){i.unsubscribe().then(i=>{i?this.Lr(e,r,n,s):(t.D.error("Failed to unsubscribe device from push."),"function"==typeof s&&s(!1))}).catch(i=>{t.D.error("Push unsubscription error: "+i),"function"==typeof s&&s(!1)})}Qr(i,e,r){var t,n=(i=>{if("string"==typeof i)return i;if(0!==i.endpoint.indexOf("https://android.googleapis.com/gcm/send"))return i.endpoint;var e=i.endpoint;return i.Xr&&-1===i.endpoint.indexOf(i.Xr)&&(e=i.endpoint+"/"+i.Xr),e})(i),s=null,o=null;if(null!=i.getKey)try{s=btoa(String.fromCharCode.apply(null,new Uint8Array(i.getKey("p256dh")))),o=btoa(String.fromCharCode.apply(null,new Uint8Array(i.getKey("auth"))))}catch(i){if("invalid arguments"!==i.message)throw i}var a=i.options&&(t=i.options.applicationServerKey)&&t.byteLength&&t.byteLength>0?btoa(String.fromCharCode.apply(null,new Uint8Array(t))).replace(/\+/g,"-").replace(/\//g,"_"):null;this.Sr.Zr(n,r,s,o,a),n&&"function"==typeof e&&e(n,s,o)}hn(){this.Sr.fn(!0)}dn(i,e){this.Sr.fn(!1),t.D.info(i),"function"==typeof e&&e(!1)}pn(i,e,r,s){if("default"===e.permission)try{window.safari.pushNotification.requestPermission(this.Wr,i,{api_key:this._r,device_id:this.Ur.te().id},e=>{"granted"===e.permission&&this.Sr.setPushNotificationSubscriptionType(n.NotificationSubscriptionTypes.OPTED_IN),this.pn(i,e,r,s)})}catch(i){this.dn("Could not request permission for push: "+i,s)}else"denied"===e.permission?this.dn("The user has blocked notifications from this site, or Safari push is not configured in the Braze dashboard.",s):"granted"===e.permission&&(t.D.info("Device successfully subscribed to push."),this.Qr(e.deviceToken,r,new Date))}bn(i,e,r){var n=n=>{switch(n){case"granted":return void("function"==typeof i&&i());case"default":return void("function"==typeof e&&e());case"denied":return void("function"==typeof r&&r());default:t.D.error("Received unexpected permission result "+n)}},s=!1,o=window.Notification.requestPermission(i=>{s&&n(i)});o?o.then(i=>{n(i)}):s=!0}Lr(i,e,n,s){var o={userVisibleOnly:!0};null!=e&&(o.applicationServerKey=e),i.pushManager.subscribe(o).then(i=>{t.D.info("Device successfully subscribed to push."),this.Qr(i,n,new Date)}).catch(i=>{r.isPushBlocked()?(t.D.info("Permission for push notifications was denied."),"function"==typeof s&&s(!1)):t.D.error("Push subscription failed: "+i)})}gn(){return this.Vr?navigator.serviceWorker.getRegistration():navigator.serviceWorker.register(this.Nr).then(()=>navigator.serviceWorker.ready.then(i=>(i&&"function"==typeof i.update&&i.update().catch(i=>{t.D.info("ServiceWorker update failed: "+i)}),i)))}wn(i){this.Vr||(i.unregister(),t.D.info("Service worker successfully unregistered."))}subscribe(i,e){if(r.isPushSupported()){if(this.Mr){if(!this.Vr&&null!=window.location){var c=this.Nr;-1===c.indexOf(window.location.host)&&(c=window.location.host+c),-1===c.indexOf(window.location.protocol)&&(c=window.location.protocol+"//"+c);var p=c.substr(0,c.lastIndexOf("/")+1);if(0!==s.yn().indexOf(p))return void t.D.error("Cannot subscribe to push from a path higher than the service worker location (tried to subscribe from "+window.location.pathname+" but service worker is at "+c+")")}if(r.isPushBlocked())return void this.dn("Notifications from this site are blocked. This may be a temporary embargo or a permanent denial.",e);if(this.gt&&!this.gt.vn()&&0===this.gt.Zs())return t.D.info("Waiting for VAPID key from server config before subscribing to push."),void this.gt.kn(()=>{this.subscribe(i,e)});var f=r.isPushPermissionGranted();this.bn(()=>{f||this.Sr.setPushNotificationSubscriptionType(n.NotificationSubscriptionTypes.OPTED_IN),this.gn().then(r=>{if(null==r)return t.D.error("No service worker registration. Set the `manageServiceWorkerExternally` initialization option to false or ensure that your service worker is registered before calling registerPush."),void("function"==typeof e&&e());r.pushManager.getSubscription().then(n=>{var s=null;if(this.gt&&null!=this.gt.vn()&&(s=t.Dn.Pn(this.gt.vn())),n){var c,p=null,f=null,d=this.h.I(o.q.Sn);if(d&&!a(d)){try{c=u.jn(d)._n}catch(i){c=null}null==c||isNaN(c.getTime())||0===c.getTime()||(p=c,(f=new Date(p)).setMonth(p.getMonth()+6))}null!=s&&n.options&&n.options.applicationServerKey&&n.options.applicationServerKey.byteLength&&n.options.applicationServerKey.byteLength>0&&!h(s,new Uint8Array(n.options.applicationServerKey))?(n.options.applicationServerKey.byteLength>12?t.D.info("Device was already subscribed to push using a different VAPID provider, creating new subscription."):t.D.info("Attempting to upgrade a gcm_sender_id-based push registration to VAPID - depending on the browser this may or may not result in the same gcm_sender_id-based subscription."),this.Kr(n,r,s,i,e)):n.expirationTime&&new Date(n.expirationTime)<=new Date().valueOf()?(t.D.info("Push subscription is expired, creating new subscription."),this.Kr(n,r,s,i,e)):d&&a(d)?this.Kr(n,r,s,i,e):null==f?(t.D.info("No push subscription creation date found, creating new subscription."),this.Kr(n,r,s,i,e)):f<=new Date().valueOf()?(t.D.info("Push subscription older than 6 months, creating new subscription."),this.Kr(n,r,s,i,e)):(t.D.info("Device already subscribed to push, sending existing subscription to backend."),this.Qr(n,i,p))}else this.Lr(r,s,i,e)}).catch(i=>{t.D.error("Error checking current push subscriptions: "+i)})}).catch(i=>{t.D.error("ServiceWorker registration failed: "+i)})},()=>{var i="Permission for push notifications was ignored.";r.isPushBlocked()&&(i+=" The browser has automatically blocked further permission requests for a period (probably 1 week)."),t.D.info(i),"function"==typeof e&&e(!0)},()=>{t.D.info("Permission for push notifications was denied."),"function"==typeof e&&e(!1)})}else if(this.Gr){if(null==this.Ir||""===this.Ir)return void t.D.error("You must supply the safariWebsitePushId initialization option in order to use registerPush on Safari");var d=window.safari.pushNotification.permission(this.Ir);this.pn(this.Ir,d,i,e)}}else t.D.info(this.An)}unsubscribe(i,e){r.isPushSupported()?this.Mr?navigator.serviceWorker.getRegistration().then(r=>{r?r.pushManager.getSubscription().then(n=>{n&&(this.hn(),n.unsubscribe().then(n=>{n?(t.D.info("Device successfully unsubscribed from push."),"function"==typeof i&&i()):(t.D.error("Failed to unsubscribe device from push."),"function"==typeof e&&e()),this.wn(r)}).catch(i=>{t.D.error("Push unsubscription error: "+i),"function"==typeof e&&e()}))}).catch(i=>{t.D.error("Error unsubscribing from push: "+i),"function"==typeof e&&e()}):(t.D.info("Device already unsubscribed from push."),"function"==typeof i&&i())}):this.Gr&&(this.hn(),t.D.info("Device unsubscribed from push."),"function"==typeof i&&i()):t.D.info(this.An)}}).An="Push notifications are not supported in this browser.",i("default",d)},[i=>(r=i.a0,t=i.r,n=i.U,s=i.W,o=i.s,a=i.w,u=i.a3,h=i.a4,c=i.e,p=i.T)]]},["okmmp9"]]);
